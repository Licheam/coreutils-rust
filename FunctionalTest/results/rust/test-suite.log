===============================================
   GNU coreutils 9.0: ./tests/test-suite.log
===============================================

# TOTAL: 631
# PASS:  533
# SKIP:  86
# XFAIL: 0
# FAIL:  12
# XPASS: 0
# ERROR: 0

.. contents:: :depth: 2

SKIP: tests/tail-2/inotify-race
===============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-inotify-race.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-inotify-race.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
++ cd /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail sleep
+ require_built_ tail sleep
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ for i in $*
+ env sleep --version
sleep (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering and Paul Eggert.
+ touch file
+ touch tail.out
+ case $(cat gdb.out) in
++ cat gdb.out
+ break_src=/home/user/FunctionTest/rust-coreutils/src/tail.c
++ grep -n '^tail_forever_inotify' /home/user/FunctionTest/rust-coreutils/src/tail.c
+ break_line='1456:tail_forever_inotify (int wd, struct File_spec *f, size_t n_files,'
++ echo '1456:tail_forever_inotify (int wd, struct File_spec *f, size_t n_files,'
++ cut -d: -f1
+ break_line=1456
+ sleep=565760
+ gdb -nx --batch-silent '--eval-command=break 1456' '--eval-command=run --pid=565760 -f file' --eval-command=quit tail
+ env sleep 10
+ kill 565760
./tests/tail-2/inotify-race.sh: line 65: kill: (565760) - No such process
+ skip_ 'breakpoint not hit'
+ warn_ 'inotify-race.sh: skipped test: breakpoint not hit'
+ case $IFS in
+ printf '%s\n' 'inotify-race.sh: skipped test: breakpoint not hit'
inotify-race.sh: skipped test: breakpoint not hit
+ test 9 = 2
+ printf '%s\n' 'inotify-race.sh: skipped test: breakpoint not hit'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ kill
+ kill 565760
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-inotify-race.sh.QeRT
+ exit 77
SKIP tests/tail-2/inotify-race.sh (exit status: 77)

SKIP: tests/tail-2/inotify-race2
================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-inotify-race2.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-inotify-race2.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
++ cd /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail sleep
+ require_built_ tail sleep
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ for i in $*
+ env sleep --version
sleep (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering and Paul Eggert.
+ touch file
+ touch tail.out
+ case $(cat gdb.out) in
++ cat gdb.out
+ break_src=/home/user/FunctionTest/rust-coreutils/src/tail.c
++ grep -n '^tail_forever_inotify' /home/user/FunctionTest/rust-coreutils/src/tail.c
+ break_line='1456:tail_forever_inotify (int wd, struct File_spec *f, size_t n_files,'
++ echo '1456:tail_forever_inotify (int wd, struct File_spec *f, size_t n_files,'
++ cut -d: -f1
+ break_line=1456
+ sleep=568409
+ gdb -nx --batch-silent '--eval-command=break 1456' '--eval-command=run --pid=568409 -f file' --eval-command=quit tail
+ env sleep 10
+ kill 568409
./tests/tail-2/inotify-race2.sh: line 64: kill: (568409) - No such process
+ skip_ 'breakpoint not hit'
+ warn_ 'inotify-race2.sh: skipped test: breakpoint not hit'
+ case $IFS in
+ printf '%s\n' 'inotify-race2.sh: skipped test: breakpoint not hit'
inotify-race2.sh: skipped test: breakpoint not hit
+ test 9 = 2
+ printf '%s\n' 'inotify-race2.sh: skipped test: breakpoint not hit'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ kill
+ kill 568409
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-inotify-race2.sh.jpD0
+ exit 77
SKIP tests/tail-2/inotify-race2.sh (exit status: 77)

FAIL: tests/misc/invalid-opt
============================

arch (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Karel Zak.
arch-invalid-opt...
b2sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady and Samuel Neves.
b2sum-invalid-opt...
base32 (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Simon Josefsson.
base32-invalid-opt...
base64 (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Simon Josefsson.
base64-invalid-opt...
basename (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
basename-invalid-opt...
basenc (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Simon Josefsson and Assaf Gordon.
basenc-invalid-opt...
cat (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund and Richard M. Stallman.
cat-invalid-opt...
chcon (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Russell Coker and Jim Meyering.
chcon-invalid-opt...
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
chgrp-invalid-opt...
chmod (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
chmod-invalid-opt...
chown (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
chown-invalid-opt...
chroot (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Roland McGrath.
chroot-invalid-opt...
cksum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady and Q. Frank Xia.
cksum-invalid-opt...
comm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
comm-invalid-opt...
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
cp-invalid-opt...
csplit (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Stuart Kemp and David MacKenzie.
csplit-invalid-opt...
cut (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David M. Ihnat, David MacKenzie, and Jim Meyering.
cut-invalid-opt...
date (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
date-invalid-opt...
dd (coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, and Stuart Kemp.
dd-invalid-opt...
df (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Paul Eggert.
df-invalid-opt...
dir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
dir-invalid-opt...
dircolors (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by H. Peter Anvin.
dircolors-invalid-opt...
dirname (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
dirname-invalid-opt...
du (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, Paul Eggert,
and Jim Meyering.
du-invalid-opt...
echo (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Brian Fox and Chet Ramey.
echo-invalid-opt...
env (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard Mlynarik, David MacKenzie, and Assaf Gordon.
env-invalid-opt...
expand (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
expand-invalid-opt...
expr (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, James Youngman, and Paul Eggert.
expr-invalid-opt...
factor (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, Torbjorn Granlund, and Niels Moller.
factor-invalid-opt...
false (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
false-invalid-opt...
fmt (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ross Paterson.
fmt-invalid-opt...
fold (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
fold-invalid-opt...
env: 'ginstall': No such file or directory
ginstall-invalid-opt...
ginstall: test ginstall-invalid-opt failed: exit status mismatch:  expected 1, got 127
groups (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and James Youngman.
groups-invalid-opt...
head (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
head-invalid-opt...
hostid (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
hostid-invalid-opt...
id (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
id-invalid-opt...
join (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Haertel.
join-invalid-opt...
link (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Michael Stone.
link-invalid-opt...
ln (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker and David MacKenzie.
ln-invalid-opt...
logname (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by FIXME: unknown.
logname-invalid-opt...
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
ls-invalid-opt...
md5sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper, Scott Miller, and David Madore.
md5sum-invalid-opt...
mkdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
mkdir-invalid-opt...
mkfifo (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
mkfifo-invalid-opt...
mknod (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
mknod-invalid-opt...
mktemp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering and Eric Blake.
mktemp-invalid-opt...
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
mv-invalid-opt...
nice (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
nice-invalid-opt...
nl (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Scott Bartram and David MacKenzie.
nl-invalid-opt...
nohup (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
nohup-invalid-opt...
nproc (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Giuseppe Scrivano.
nproc-invalid-opt...
numfmt (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Assaf Gordon.
numfmt-invalid-opt...
od (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
od-invalid-opt...
paste (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David M. Ihnat and David MacKenzie.
paste-invalid-opt...
pathchk (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Eggert, David MacKenzie, and Jim Meyering.
pathchk-invalid-opt...
pinky (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Joseph Arceneaux, David MacKenzie, and Kaveh Ghazi.
pinky-invalid-opt...
pr (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Pete TerMaat and Roland Huebner.
pr-invalid-opt...
printenv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Richard Mlynarik.
printenv-invalid-opt...
printf (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
printf-invalid-opt...
ptx (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by F. Pinard.
ptx-invalid-opt...
pwd (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
pwd-invalid-opt...
readlink (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Dmitry V. Levin.
readlink-invalid-opt...
realpath (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady.
realpath-invalid-opt...
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
rm-invalid-opt...
rmdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
rmdir-invalid-opt...
runcon (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Russell Coker.
runcon-invalid-opt...
seq (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper.
seq-invalid-opt...
sha1sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper, Scott Miller, and David Madore.
sha1sum-invalid-opt...
sha224sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper, Scott Miller, and David Madore.
sha224sum-invalid-opt...
sha256sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper, Scott Miller, and David Madore.
sha256sum-invalid-opt...
sha384sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper, Scott Miller, and David Madore.
sha384sum-invalid-opt...
sha512sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Ulrich Drepper, Scott Miller, and David Madore.
sha512sum-invalid-opt...
shred (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Colin Plumb.
shred-invalid-opt...
shuf (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Eggert.
shuf-invalid-opt...
sleep (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering and Paul Eggert.
sleep-invalid-opt...
sort (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Haertel and Paul Eggert.
sort-invalid-opt...
split (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund and Richard M. Stallman.
split-invalid-opt...
stat (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Michael Meskes.
stat-invalid-opt...
stdbuf (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady.
stdbuf-invalid-opt...
stty (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
stty-invalid-opt...
sum (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Kayvan Aghaiepour and David MacKenzie.
sum-invalid-opt...
sync (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering and Giuseppe Scrivano.
sync-invalid-opt...
tac (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jay Lepreau and David MacKenzie.
tac-invalid-opt...
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
tail-invalid-opt...
tee (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, Richard M. Stallman, and David MacKenzie.
tee-invalid-opt...
test-invalid-opt...
timeout (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady.
timeout-invalid-opt...
touch (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, Arnold Robbins, Jim Kingdon,
David MacKenzie, and Randy Smith.
touch-invalid-opt...
tr (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
tr-invalid-opt...
true (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jim Meyering.
true-invalid-opt...
truncate (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady.
truncate-invalid-opt...
tsort (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mark Kettenis.
tsort-invalid-opt...
tty (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
tty-invalid-opt...
uname (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
uname-invalid-opt...
unexpand (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
unexpand-invalid-opt...
uniq (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
uniq-invalid-opt...
unlink (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Michael Stone.
unlink-invalid-opt...
users (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Joseph Arceneaux and David MacKenzie.
users-invalid-opt...
vdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
vdir-invalid-opt...
wc (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin and David MacKenzie.
wc-invalid-opt...
who (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Joseph Arceneaux, David MacKenzie, and Michael Stone.
who-invalid-opt...
whoami (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard Mlynarik.
whoami-invalid-opt...
yes (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
yes-invalid-opt...
FAIL tests/misc/invalid-opt.pl (exit status: 1)

SKIP: tests/rm/ext3-perf
========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-ext3-perf.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-ext3-perf.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
++ cd /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ very_expensive_
+ test yes '!=' yes
+ threshold_seconds=60
+ n=400000
+ df -T -t ext3 -t ext4dev -t ext4 .
df: no file systems processed
+ skip_ 'this test runs only on an ext3 or ext4 file system'
+ warn_ 'ext3-perf.sh: skipped test: this test runs only on an ext3 or ext4 file system'
+ case $IFS in
+ printf '%s\n' 'ext3-perf.sh: skipped test: this test runs only on an ext3 or ext4 file system'
ext3-perf.sh: skipped test: this test runs only on an ext3 or ext4 file system
+ test 9 = 2
+ printf '%s\n' 'ext3-perf.sh: skipped test: this test runs only on an ext3 or ext4 file system'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-ext3-perf.sh.neTy
+ exit 77
SKIP tests/rm/ext3-perf.sh (exit status: 77)

SKIP: tests/cp/no-ctx
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-no-ctx.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-no-ctx.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
++ cd /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_gcc_shared_
+ gcc_shared_libs_=-ldl
+ gcc_shared_ - d.so -xc
+ local in=-
+ local out=d.so
+ shift 2
+ gcc -Wall -shared --std=gnu99 -fPIC -O2 -xc - -o d.so -ldl
+ :
+ rm -f d.so
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'no-ctx.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'no-ctx.sh: skipped test: this system lacks SELinux support'
no-ctx.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ printf '%s\n' 'no-ctx.sh: skipped test: this system lacks SELinux support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-no-ctx.sh.eCkt
+ exit 77
SKIP tests/cp/no-ctx.sh (exit status: 77)

SKIP: tests/misc/tty-eof
========================

tty-eof.pl: this script requires Perl's Expect package >=1.11
SKIP tests/misc/tty-eof.pl (exit status: 77)

SKIP: tests/tail-2/inotify-rotate-resources
===========================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-inotify-rotate-resources.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-inotify-rotate-resources.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
++ cd /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ require_local_dir_
+ require_mount_list_
+ local 'mount_list_fail=cannot read table of mounted file systems'
+ df --local
+ grep -F 'cannot read table of mounted file systems'
+ is_local_dir_ .
+ test 1 = 1
+ df --local .
+ grep '^#define HAVE_INOTIFY 1' /home/user/FunctionTest/rust-coreutils/lib/config.h
+ require_strace_ inotify_add_watch,inotify_rm_watch
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'inotify-rotate-resources.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'inotify-rotate-resources.sh: skipped test: no strace program'
inotify-rotate-resources.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'inotify-rotate-resources.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-inotify-rotate-resources.sh.KdyF
+ exit 77
SKIP tests/tail-2/inotify-rotate-resources.sh (exit status: 77)

FAIL: tests/tail-2/inotify-dir-recreate
=======================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-inotify-dir-recreate.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-inotify-dir-recreate.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
++ cd /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ grep '^#define HAVE_INOTIFY 1' /home/user/FunctionTest/rust-coreutils/lib/config.h
+ is_local_dir_ .
+ test 1 = 1
+ df --local .
+ mkdir dir
+ echo inotify
+ pid=557799
+ grep_timeout_ inotify out
+ check_re=inotify
+ timeout 60 tail --pid=552383 -F dir/file
+ check_f=out
+ retry_delay_ check_tail_output_ .1 5
+ local test_func=check_tail_output_
+ local init_delay=.1
+ local max_n_tries=5
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 5
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output_ 0.1
+ local delay=0.1
+ grep inotify out
+ time_fail=0
+ break
+ test 0 = 0
+ inotify_failed_re='inotify (resources exhausted|cannot be used)'
+ grep -E 'inotify (resources exhausted|cannot be used)' out
+ rm -r dir
+ grep_timeout_ polling out
+ check_re=polling
+ check_f=out
+ retry_delay_ check_tail_output_ .1 5
+ local test_func=check_tail_output_
+ local init_delay=.1
+ local max_n_tries=5
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 5
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output_ 0.1
+ local delay=0.1
+ grep polling out
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 5
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ check_tail_output_ 0.2
+ local delay=0.2
+ grep polling out
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 5
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ check_tail_output_ 0.4
+ local delay=0.4
+ grep polling out
+ sleep 0.4
+ return 1
+ time_fail=1
++ expr 3 + 1
+ attempt=4
++ expr 4 '*' 2
+ num_sleeps=8
+ test 4 -le 5
++ gawk -v n=8 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.8
+ check_tail_output_ 0.8
+ local delay=0.8
+ grep polling out
+ sleep 0.8
+ return 1
+ time_fail=1
++ expr 4 + 1
+ attempt=5
++ expr 8 '*' 2
+ num_sleeps=16
+ test 5 -le 5
++ gawk -v n=16 -v s=.1 'BEGIN { print s * n }'
+ local delay=1.6
+ check_tail_output_ 1.6
+ local delay=1.6
+ grep polling out
+ sleep 1.6
+ return 1
+ time_fail=1
++ expr 5 + 1
+ attempt=6
++ expr 16 '*' 2
+ num_sleeps=32
+ test 6 -le 5
+ test 1 = 0
+ cleanup_fail_ 'tail did not switch to polling mode'
+ warn_ tail did not switch to polling mode
+ case $IFS in
+ printf '%s\n' 'tail did not switch to polling mode'
tail did not switch to polling mode
+ test 9 = 2
+ printf '%s\n' 'tail did not switch to polling mode'
+ sed 1q
+ cleanup_
+ kill 557799
+ wait 557799
+ fail=1
+ mkdir dir
+ touch dir/file
+ grep_timeout_ appeared out
+ check_re=appeared
+ check_f=out
+ retry_delay_ check_tail_output_ .1 5
+ local test_func=check_tail_output_
+ local init_delay=.1
+ local max_n_tries=5
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 5
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output_ 0.1
+ local delay=0.1
+ grep appeared out
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 5
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ check_tail_output_ 0.2
+ local delay=0.2
+ grep appeared out
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 5
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ check_tail_output_ 0.4
+ local delay=0.4
+ grep appeared out
+ sleep 0.4
+ return 1
+ time_fail=1
++ expr 3 + 1
+ attempt=4
++ expr 4 '*' 2
+ num_sleeps=8
+ test 4 -le 5
++ gawk -v n=8 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.8
+ check_tail_output_ 0.8
+ local delay=0.8
+ grep appeared out
+ sleep 0.8
+ return 1
+ time_fail=1
++ expr 4 + 1
+ attempt=5
++ expr 8 '*' 2
+ num_sleeps=16
+ test 5 -le 5
++ gawk -v n=16 -v s=.1 'BEGIN { print s * n }'
+ local delay=1.6
+ check_tail_output_ 1.6
+ local delay=1.6
+ grep appeared out
+ sleep 1.6
+ return 1
+ time_fail=1
++ expr 5 + 1
+ attempt=6
++ expr 16 '*' 2
+ num_sleeps=32
+ test 6 -le 5
+ test 1 = 0
+ cleanup_fail_ 'previously removed file did not appear'
+ warn_ previously removed file did not appear
+ case $IFS in
+ printf '%s\n' 'previously removed file did not appear'
previously removed file did not appear
+ test 9 = 2
+ printf '%s\n' 'previously removed file did not appear'
+ sed 1q
+ cleanup_
+ kill 557799
+ fail=1
+ cleanup_
+ kill 557799
+ cat
+ compare exp out
+ compare_dev_null_ exp out
+ test 2 = 2
+ test xexp = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ exp out
+ diff -u exp out
--- exp	2024-09-05 10:11:04.127828595 +0000
+++ out	2024-09-05 10:10:56.981914411 +0000
@@ -1,5 +1 @@
 inotify
-tail: 'dir/file' has become inaccessible: No such file or directory
-tail: directory containing watched file was removed
-tail: inotify cannot be used, reverting to polling
-tail: 'dir/file' has appeared;  following new file
+ fail=1
+ Exit 1
+ set +e
+ exit 1
+ exit 1
+ remove_tmp_
+ __st=1
+ cleanup_
+ kill 557799
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-inotify-dir-recreate.sh.wM5w
+ exit 1
FAIL tests/tail-2/inotify-dir-recreate.sh (exit status: 1)

SKIP: tests/tail-2/inotify-only-regular
=======================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-inotify-only-regular.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-inotify-only-regular.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
++ cd /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ grep '^#define HAVE_INOTIFY 1' /home/user/FunctionTest/rust-coreutils/lib/config.h
+ require_strace_ inotify_add_watch
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'inotify-only-regular.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'inotify-only-regular.sh: skipped test: no strace program'
inotify-only-regular.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'inotify-only-regular.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-inotify-only-regular.sh.Zp6X
+ exit 77
SKIP tests/tail-2/inotify-only-regular.sh (exit status: 77)

SKIP: tests/chgrp/basic
=======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-basic.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-basic.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
++ cd /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chgrp
+ require_built_ chgrp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chgrp --version
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'basic.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'basic.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
basic.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ printf '%s\n' 'basic.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-basic.sh.zj37
+ exit 77
SKIP tests/chgrp/basic.sh (exit status: 77)

SKIP: tests/rm/fail-eperm
=========================

fail-eperm.xpl: considering /tmp/.
fail-eperm.xpl: considering /tmp/..
fail-eperm.xpl: considering /var/tmp/.
fail-eperm.xpl: considering /var/tmp/..
fail-eperm.xpl: considering /usr/tmp/.
fail-eperm.xpl: considering /usr/tmp/..
fail-eperm.xpl: couldn't find a file not owned by you
 in any of the following directories:
  /tmp /var/tmp /usr/tmp
...so, skipping this test
SKIP tests/rm/fail-eperm.xpl (exit status: 77)

SKIP: tests/rm/r-root
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-r-root.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-r-root.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
++ cd /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ skip_if_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ require_gcc_shared_
+ gcc_shared_libs_=-ldl
+ gcc_shared_ - d.so -xc
+ local in=-
+ local out=d.so
+ shift 2
+ gcc -Wall -shared --std=gnu99 -fPIC -O2 -xc - -o d.so -ldl
+ :
+ rm -f d.so
+ unset CU_TEST_SKIP_EXIT
+ USE_GDB=1
+ test 1 = 1
+ case $(cat gdb.out) in
++ cat gdb.out
+ break_src=/home/user/FunctionTest/rust-coreutils/src/remove.c
++ grep -n '^excise' /home/user/FunctionTest/rust-coreutils/src/remove.c
+ break_line='367:excise (FTS *fts, FTSENT *ent, struct rm_options const *x, bool is_dir)'
++ cut -d: -f1
++ echo '367:excise (FTS *fts, FTSENT *ent, struct rm_options const *x, bool is_dir)'
+ break_line=367
+ break_line=/home/user/FunctionTest/rust-coreutils/src/remove.c:367
+ cat
+ gcc_shared_ k.c k.so
+ local in=k.c
+ local out=k.so
+ shift 2
+ gcc -Wall -shared --std=gnu99 -fPIC -O2 k.c -o k.so -ldl
+ cat
+ mkdir dir
+ rm -r dir
+ test -d dir
+ mkdir dir
+ skip=
+ for file in dir file
+ exercise_rm_r_root dir
+ rm -f x excise.break
+ test -f x
+ test -f excise.break
+ local skip_exit=
+ '[' '' = 1 ']'
+ test 1 = 1
+ gdb -nx --batch-silent -return-child-result '--eval-command=set exec-wrapper					                       env '\''LD_PRELOAD=:./k.so'\'' ' '--eval-command=break '\''/home/user/FunctionTest/rust-coreutils/src/remove.c:367'\''' '--eval-command=source bp.py' '--eval-command=run -rv --one-file-system dir' --eval-command=quit rm
+ ret=0
+ clean_rm_err_
+ sed 's/.*rm: /rm: /;        s/\(rm: it is dangerous to operate recursively on\).*$/\1 '\''\/'\''/'
+ return 0
+ test -e dir
+ test -f x
+ test -f excise.break
+ skip=1
+ compare /dev/null err
+ compare_dev_null_ /dev/null err
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s err
+ emit_diff_u_header_ /dev/null err
+ printf '%s\n' 'diff -u /dev/null err' '--- /dev/null	1970-01-01' '+++ err	1970-01-01'
diff -u /dev/null err
--- /dev/null	1970-01-01
+++ err	1970-01-01
+ sed 's/^/+/' err
+No symbol table is loaded.  Use the "file" command.
+warning: Error disabling address space randomization: Operation not permitted
+ return 1
+ case $? in
+ return 1
+ skip=1
+ test 1 = 1
+ cat out
+ cat err
No symbol table is loaded.  Use the "file" command.
warning: Error disabling address space randomization: Operation not permitted
+ skip_ 'internal test failure: maybe LD_PRELOAD or gdb doesn'\''t work?'
+ warn_ 'r-root.sh: skipped test: internal test failure: maybe LD_PRELOAD or gdb doesn'\''t work?'
+ case $IFS in
+ printf '%s\n' 'r-root.sh: skipped test: internal test failure: maybe LD_PRELOAD or gdb doesn'\''t work?'
r-root.sh: skipped test: internal test failure: maybe LD_PRELOAD or gdb doesn't work?
+ test 9 = 2
+ printf '%s\n' 'r-root.sh: skipped test: internal test failure: maybe LD_PRELOAD or gdb doesn'\''t work?'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-r-root.sh.TDWE
+ exit 77
SKIP tests/rm/r-root.sh (exit status: 77)

SKIP: tests/chgrp/default-no-deref
==================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-default-no-deref.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-default-no-deref.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
++ cd /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chgrp
+ require_built_ chgrp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chgrp --version
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'default-no-deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'default-no-deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
default-no-deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ printf '%s\n' 'default-no-deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-default-no-deref.sh.mFMX
+ exit 77
SKIP tests/chgrp/default-no-deref.sh (exit status: 77)

SKIP: tests/chgrp/deref
=======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-deref.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-deref.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
++ cd /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chgrp
+ require_built_ chgrp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chgrp --version
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ printf '%s\n' 'deref.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-deref.sh.yMTU
+ exit 77
SKIP tests/chgrp/deref.sh (exit status: 77)

SKIP: tests/chgrp/no-x
======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-no-x.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-no-x.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
++ cd /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chgrp
+ require_built_ chgrp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chgrp --version
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'no-x.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'no-x.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
no-x.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'no-x.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-no-x.sh.aJfd
+ exit 77
SKIP tests/chgrp/no-x.sh (exit status: 77)

SKIP: tests/chgrp/posix-H
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-posix-H.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-posix-H.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
++ cd /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chgrp
+ require_built_ chgrp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chgrp --version
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'posix-H.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'posix-H.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
posix-H.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ printf '%s\n' 'posix-H.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-posix-H.sh.xxLa
+ exit 77
SKIP tests/chgrp/posix-H.sh (exit status: 77)

SKIP: tests/chgrp/recurse
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-recurse.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-recurse.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
++ cd /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chgrp
+ require_built_ chgrp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chgrp --version
chgrp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'recurse.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'recurse.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
recurse.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ printf '%s\n' 'recurse.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-recurse.sh.wr9f
+ exit 77
SKIP tests/chgrp/recurse.sh (exit status: 77)

FAIL: tests/misc/test
=====================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/test.pl (exit status: 2)

FAIL: tests/misc/join
=====================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/join.pl (exit status: 2)

SKIP: tests/misc/coreutils
==========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-coreutils.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-coreutils.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
++ cd /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ coreutils
+ require_built_ coreutils
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ echo 'coreutils: not built'
coreutils: not built
+ skip_=yes
+ test yes = yes
+ skip_ 'required program(s) not built'
+ warn_ 'coreutils.sh: skipped test: required program(s) not built'
+ case $IFS in
+ printf '%s\n' 'coreutils.sh: skipped test: required program(s) not built'
coreutils.sh: skipped test: required program(s) not built
+ test 9 = 2
+ printf '%s\n' 'coreutils.sh: skipped test: required program(s) not built'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-coreutils.sh.U7TQ
+ exit 77
SKIP tests/misc/coreutils.sh (exit status: 77)

FAIL: tests/misc/csplit-suppress-matched
========================================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/csplit-suppress-matched.pl (exit status: 2)

FAIL: tests/misc/expand
=======================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/expand.pl (exit status: 2)

FAIL: tests/misc/expr-multibyte
===============================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/expr-multibyte.pl (exit status: 2)

SKIP: tests/misc/kill
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-kill.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-kill.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
++ cd /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ kill
+ require_built_ kill
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ echo 'kill: not built'
kill: not built
+ skip_=yes
+ test yes = yes
+ skip_ 'required program(s) not built'
+ warn_ 'kill.sh: skipped test: required program(s) not built'
+ case $IFS in
+ printf '%s\n' 'kill.sh: skipped test: required program(s) not built'
kill.sh: skipped test: required program(s) not built
+ test 9 = 2
+ printf '%s\n' 'kill.sh: skipped test: required program(s) not built'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-kill.sh.57NE
+ exit 77
SKIP tests/misc/kill.sh (exit status: 77)

FAIL: tests/misc/numfmt
=======================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/numfmt.pl (exit status: 2)

SKIP: tests/misc/shuf-reservoir
===============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-shuf-reservoir.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-shuf-reservoir.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
++ cd /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ shuf
+ require_built_ shuf
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env shuf --version
shuf (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Eggert.
+ expensive_
+ test yes '!=' yes
+ require_valgrind_
+ valgrind --error-exitcode=1 true
+ skip_ 'requires a working valgrind'
+ warn_ 'shuf-reservoir.sh: skipped test: requires a working valgrind'
+ case $IFS in
+ printf '%s\n' 'shuf-reservoir.sh: skipped test: requires a working valgrind'
shuf-reservoir.sh: skipped test: requires a working valgrind
+ test 9 = 2
+ printf '%s\n' 'shuf-reservoir.sh: skipped test: requires a working valgrind'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-shuf-reservoir.sh.H8vV
+ exit 77
SKIP tests/misc/shuf-reservoir.sh (exit status: 77)

FAIL: tests/misc/sort
=====================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/sort.pl (exit status: 2)

SKIP: tests/misc/sort-h-thousands-sep
=====================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-sort-h-thousands-sep.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-sort-h-thousands-sep.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
++ cd /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ sort
+ require_built_ sort
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env sort --version
sort (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Haertel and Paul Eggert.
+ TEST_LOCALE=sv_SE
++ LC_ALL=sv_SE
++ locale thousands_sep
locale: Cannot set LC_CTYPE to default locale: No such file or directory
locale: Cannot set LC_MESSAGES to default locale: No such file or directory
locale: Cannot set LC_ALL to default locale: No such file or directory
+ test '' = ' '
+ skip_ 'The Swedish locale with blank thousands separator is unavailable.'
+ warn_ 'sort-h-thousands-sep.sh: skipped test: The Swedish locale with blank thousands separator is unavailable.'
+ case $IFS in
+ printf '%s\n' 'sort-h-thousands-sep.sh: skipped test: The Swedish locale with blank thousands separator is unavailable.'
sort-h-thousands-sep.sh: skipped test: The Swedish locale with blank thousands separator is unavailable.
+ test 9 = 2
+ printf '%s\n' 'sort-h-thousands-sep.sh: skipped test: The Swedish locale with blank thousands separator is unavailable.'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-sort-h-thousands-sep.sh.Vea5
+ exit 77
SKIP tests/misc/sort-h-thousands-sep.sh (exit status: 77)

FAIL: tests/misc/sort-merge
===========================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/sort-merge.pl (exit status: 2)

SKIP: tests/misc/sort-stale-thread-mem
======================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-sort-stale-thread-mem.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-sort-stale-thread-mem.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
++ cd /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ sort
+ require_built_ sort
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env sort --version
sort (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Haertel and Paul Eggert.
+ very_expensive_
+ test yes '!=' yes
+ require_valgrind_
+ valgrind --error-exitcode=1 true
+ skip_ 'requires a working valgrind'
+ warn_ 'sort-stale-thread-mem.sh: skipped test: requires a working valgrind'
+ case $IFS in
+ printf '%s\n' 'sort-stale-thread-mem.sh: skipped test: requires a working valgrind'
sort-stale-thread-mem.sh: skipped test: requires a working valgrind
+ test 9 = 2
+ printf '%s\n' 'sort-stale-thread-mem.sh: skipped test: requires a working valgrind'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-sort-stale-thread-mem.sh.vUfO
+ exit 77
SKIP tests/misc/sort-stale-thread-mem.sh (exit status: 77)

SKIP: tests/misc/sort-u-FMR
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-sort-u-FMR.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-sort-u-FMR.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
++ cd /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ sort
+ require_built_ sort
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env sort --version
sort (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Haertel and Paul Eggert.
+ require_valgrind_
+ valgrind --error-exitcode=1 true
+ skip_ 'requires a working valgrind'
+ warn_ 'sort-u-FMR.sh: skipped test: requires a working valgrind'
+ case $IFS in
+ printf '%s\n' 'sort-u-FMR.sh: skipped test: requires a working valgrind'
sort-u-FMR.sh: skipped test: requires a working valgrind
+ test 9 = 2
+ printf '%s\n' 'sort-u-FMR.sh: skipped test: requires a working valgrind'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-sort-u-FMR.sh.m238
+ exit 77
SKIP tests/misc/sort-u-FMR.sh (exit status: 77)

SKIP: tests/misc/stty
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-stty.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-stty.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
++ cd /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ stty
+ require_built_ stty
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env stty --version
stty (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_controlling_input_terminal_
+ have_input_tty=yes
+ tty -s
+ have_input_tty=no
+ test -t 0
+ have_input_tty=no
+ test no = no
+ skip_ 'requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ warn_ 'stty.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ case $IFS in
+ printf '%s\n' 'stty.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
stty.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.
+ test 9 = 2
+ printf '%s\n' 'stty.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-stty.sh.xWoY
+ exit 77
SKIP tests/misc/stty.sh (exit status: 77)

SKIP: tests/misc/stty-invalid
=============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-stty-invalid.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-stty-invalid.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
++ cd /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ stty
+ require_built_ stty
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env stty --version
stty (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_controlling_input_terminal_
+ have_input_tty=yes
+ tty -s
+ have_input_tty=no
+ test -t 0
+ have_input_tty=no
+ test no = no
+ skip_ 'requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ warn_ 'stty-invalid.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ case $IFS in
+ printf '%s\n' 'stty-invalid.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
stty-invalid.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.
+ test 9 = 2
+ printf '%s\n' 'stty-invalid.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-stty-invalid.sh.Zf9w
+ exit 77
SKIP tests/misc/stty-invalid.sh (exit status: 77)

SKIP: tests/misc/stty-pairs
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-stty-pairs.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-stty-pairs.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
++ cd /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ stty
+ require_built_ stty
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env stty --version
stty (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ expensive_
+ test yes '!=' yes
+ require_controlling_input_terminal_
+ have_input_tty=yes
+ tty -s
+ have_input_tty=no
+ test -t 0
+ have_input_tty=no
+ test no = no
+ skip_ 'requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ warn_ 'stty-pairs.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ case $IFS in
+ printf '%s\n' 'stty-pairs.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
stty-pairs.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.
+ test 9 = 2
+ printf '%s\n' 'stty-pairs.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-stty-pairs.sh.4j90
+ exit 77
SKIP tests/misc/stty-pairs.sh (exit status: 77)

SKIP: tests/misc/stty-row-col
=============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-stty-row-col.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-stty-row-col.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
++ cd /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ stty
+ require_built_ stty
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env stty --version
stty (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_controlling_input_terminal_
+ have_input_tty=yes
+ tty -s
+ have_input_tty=no
+ test -t 0
+ have_input_tty=no
+ test no = no
+ skip_ 'requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ warn_ 'stty-row-col.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ case $IFS in
+ printf '%s\n' 'stty-row-col.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
stty-row-col.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.
+ test 9 = 2
+ printf '%s\n' 'stty-row-col.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-stty-row-col.sh.tRiF
+ exit 77
SKIP tests/misc/stty-row-col.sh (exit status: 77)

SKIP: tests/misc/tac-continue
=============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-tac-continue.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-tac-continue.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
++ cd /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tac
+ require_built_ tac
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tac --version
tac (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jay Lepreau and David MacKenzie.
+ test x = x
+ skip_ 'FULL_PARTITION_TMPDIR not defined'
+ warn_ 'tac-continue.sh: skipped test: FULL_PARTITION_TMPDIR not defined'
+ case $IFS in
+ printf '%s\n' 'tac-continue.sh: skipped test: FULL_PARTITION_TMPDIR not defined'
tac-continue.sh: skipped test: FULL_PARTITION_TMPDIR not defined
+ test 9 = 2
+ printf '%s\n' 'tac-continue.sh: skipped test: FULL_PARTITION_TMPDIR not defined'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-tac-continue.sh.WYpe
+ exit 77
SKIP tests/misc/tac-continue.sh (exit status: 77)

FAIL: tests/misc/unexpand
=========================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/unexpand.pl (exit status: 2)

FAIL: tests/misc/uniq
=====================

Can't exec "getlimits": No such file or directory at tests/Coreutils.pm line 210.
Error running getlimits
FAIL tests/misc/uniq.pl (exit status: 2)

SKIP: tests/misc/xattr
======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-xattr.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-xattr.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
++ cd /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp mv ginstall
+ require_built_ cp mv ginstall
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ for i in $*
+ env ginstall --version
install (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ touch src dest
+ cp --preserve=xattr -n src dest
cp: cannot preserve extended attributes, cp is built without xattr support
+ skip_ 'coreutils built without xattr support'
+ warn_ 'xattr.sh: skipped test: coreutils built without xattr support'
+ case $IFS in
+ printf '%s\n' 'xattr.sh: skipped test: coreutils built without xattr support'
xattr.sh: skipped test: coreutils built without xattr support
+ test 9 = 2
+ printf '%s\n' 'xattr.sh: skipped test: coreutils built without xattr support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-xattr.sh.jzmG
+ exit 77
SKIP tests/misc/xattr.sh (exit status: 77)

SKIP: tests/cp/acl
==================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-acl.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-acl.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
++ cd /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_acl_
+ getfacl --version
+ setfacl --version
+ id -u bin
+ grep '^#define USE_ACL 1' /home/user/FunctionTest/rust-coreutils/lib/config.h
+ skip_ 'insufficient ACL support'
+ warn_ 'acl.sh: skipped test: insufficient ACL support'
+ case $IFS in
+ printf '%s\n' 'acl.sh: skipped test: insufficient ACL support'
acl.sh: skipped test: insufficient ACL support
+ test 9 = 2
+ printf '%s\n' 'acl.sh: skipped test: insufficient ACL support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-acl.sh.R4CP
+ exit 77
SKIP tests/cp/acl.sh (exit status: 77)

SKIP: tests/cp/existing-perm-race
=================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-existing-perm-race.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-existing-perm-race.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
++ cd /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_membership_in_two_groups_
+ test 0 = 0
+ groups=0
+ case "$groups" in
+ skip_ 'requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ warn_ 'existing-perm-race.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ case $IFS in
+ printf '%s\n' 'existing-perm-race.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
existing-perm-race.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running 'id -G' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='users cdrom' make check


+ test 9 = 2
+ printf '%s\n' 'existing-perm-race.sh: skipped test: requires membership in two groups
this test requires that you be a member of more than one group,
but running '\''id -G'\'' either failed or found just one.  If you really
are a member of at least two groups, then rerun this test with
COREUTILS_GROUPS set in your environment to the space-separated list
of group names or numbers.  E.g.,

  env COREUTILS_GROUPS='\''users cdrom'\'' make check

'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-existing-perm-race.sh.HIDm
+ exit 77
SKIP tests/cp/existing-perm-race.sh (exit status: 77)

SKIP: tests/cp/copy-FMR
=======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-copy-FMR.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-copy-FMR.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
++ cd /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_valgrind_
+ valgrind --error-exitcode=1 true
+ skip_ 'requires a working valgrind'
+ warn_ 'copy-FMR.sh: skipped test: requires a working valgrind'
+ case $IFS in
+ printf '%s\n' 'copy-FMR.sh: skipped test: requires a working valgrind'
copy-FMR.sh: skipped test: requires a working valgrind
+ test 9 = 2
+ printf '%s\n' 'copy-FMR.sh: skipped test: requires a working valgrind'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-copy-FMR.sh.Ybvu
+ exit 77
SKIP tests/cp/copy-FMR.sh (exit status: 77)

SKIP: tests/cp/nfs-removal-race
===============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-nfs-removal-race.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-nfs-removal-race.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
++ cd /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_gcc_shared_
+ gcc_shared_libs_=-ldl
+ gcc_shared_ - d.so -xc
+ local in=-
+ local out=d.so
+ shift 2
+ gcc -Wall -shared --std=gnu99 -fPIC -O2 -xc - -o d.so -ldl
+ :
+ rm -f d.so
+ cat
+ gcc_shared_ k.c k.so
+ local in=k.c
+ local out=k.so
+ shift 2
+ gcc -Wall -shared --std=gnu99 -fPIC -O2 k.c -o k.so -ldl
+ touch d2
+ echo xyz
+ LD_PRELOAD=:./k.so
+ cp src d
+ test -f preloaded
+ skip_ 'LD_PRELOAD was ineffective?'
+ warn_ 'nfs-removal-race.sh: skipped test: LD_PRELOAD was ineffective?'
+ case $IFS in
+ printf '%s\n' 'nfs-removal-race.sh: skipped test: LD_PRELOAD was ineffective?'
nfs-removal-race.sh: skipped test: LD_PRELOAD was ineffective?
+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'nfs-removal-race.sh: skipped test: LD_PRELOAD was ineffective?'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-nfs-removal-race.sh.AUsm
+ exit 77
SKIP tests/cp/nfs-removal-race.sh (exit status: 77)

SKIP: tests/df/df-symlink
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-df-symlink.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-df-symlink.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
++ cd /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ df
+ require_built_ df
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env df --version
df (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Paul Eggert.
++ df --out=source .
++ tail -n1
+ file_system=overlay
+ ln -s overlay symlink
+ df --out=source,target overlay
df: overlay: No such file or directory
+ skip_ 'cannot get info for overlay'
+ warn_ 'df-symlink.sh: skipped test: cannot get info for overlay'
+ case $IFS in
+ printf '%s\n' 'df-symlink.sh: skipped test: cannot get info for overlay'
df-symlink.sh: skipped test: cannot get info for overlay
+ test 9 = 2
+ printf '%s\n' 'df-symlink.sh: skipped test: cannot get info for overlay'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-df-symlink.sh.bpWU
+ exit 77
SKIP tests/df/df-symlink.sh (exit status: 77)

SKIP: tests/df/skip-rootfs
==========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-skip-rootfs.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-skip-rootfs.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
++ cd /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ df
+ require_built_ df
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env df --version
df (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Paul Eggert.
+ timeout 10 df
Filesystem      1K-blocks      Used  Available Use% Mounted on
overlay         720596200 442070744  278525456  62% /
tmpfs               65536         0      65536   0% /dev
tmpfs          1050336704         0 1050336704   0% /sys/fs/cgroup
shm                 65536         4      65532   1% /dev/shm
/dev/sda5       720596200 442070768  278525432  62% /etc/hosts
tmpfs          1050336704         0 1050336704   0% /proc/acpi
tmpfs          1050336704         0 1050336704   0% /proc/scsi
tmpfs          1050336704         0 1050336704   0% /sys/firmware
tmpfs          1050336704         0 1050336704   0% /sys/devices/virtual/powercap
+ df -a
+ grep '^rootfs' out
+ skip_ 'no rootfs in mtab'
+ warn_ 'skip-rootfs.sh: skipped test: no rootfs in mtab'
+ case $IFS in
+ printf '%s\n' 'skip-rootfs.sh: skipped test: no rootfs in mtab'
skip-rootfs.sh: skipped test: no rootfs in mtab
+ test 9 = 2
+ printf '%s\n' 'skip-rootfs.sh: skipped test: no rootfs in mtab'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-skip-rootfs.sh.4I5E
+ exit 77
SKIP tests/df/skip-rootfs.sh (exit status: 77)

SKIP: tests/dd/nocache_eof
==========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-nocache_eof.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-nocache_eof.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
++ cd /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ dd
+ require_built_ dd
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env dd --version
dd (coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, and Stuart Kemp.
+ require_strace_ fadvise64,fadvise64_64
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'nocache_eof.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'nocache_eof.sh: skipped test: no strace program'
nocache_eof.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'nocache_eof.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-nocache_eof.sh.CnJ6
+ exit 77
SKIP tests/dd/nocache_eof.sh (exit status: 77)

SKIP: tests/du/bigtime
======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-bigtime.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-bigtime.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
++ cd /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ du
+ require_built_ du
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env du --version
du (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, Paul Eggert,
and Jim Meyering.
+ export LC_ALL=C
+ LC_ALL=C
+ export TZ=UTC0
+ TZ=UTC0
+ bignum=9223372036854775807
+ touch -d @9223372036854775807 future
++ ls -l future
+ future_time='-rw-r--r-- 1 user root 0 Jan 19  2038 future'
+ case "$future_time" in
+ skip_ 'file system or localtime mishandles big timestamps:' '-rw-r--r-- 1 user root 0 Jan 19  2038 future'
+ warn_ 'bigtime.sh: skipped test: file system or localtime mishandles big timestamps:' '-rw-r--r-- 1 user root 0 Jan 19  2038 future'
+ case $IFS in
+ printf '%s\n' 'bigtime.sh: skipped test: file system or localtime mishandles big timestamps: -rw-r--r-- 1 user root 0 Jan 19  2038 future'
bigtime.sh: skipped test: file system or localtime mishandles big timestamps: -rw-r--r-- 1 user root 0 Jan 19  2038 future
+ test 9 = 2
+ printf '%s\n' 'bigtime.sh: skipped test: file system or localtime mishandles big timestamps: -rw-r--r-- 1 user root 0 Jan 19  2038 future'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-bigtime.sh.jwrp
+ exit 77
SKIP tests/du/bigtime.sh (exit status: 77)

SKIP: tests/du/move-dir-while-traversing
========================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-move-dir-while-traversing.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-move-dir-while-traversing.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
++ cd /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ du
+ require_built_ du
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env du --version
du (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, Paul Eggert,
and Jim Meyering.
+ require_trap_signame_
+ trap '' CHLD
+ python -m pyinotify -h
./tests/du/move-dir-while-traversing.sh: line 24: python: command not found
+ skip_ 'python inotify package not installed'
+ warn_ 'move-dir-while-traversing.sh: skipped test: python inotify package not installed'
+ case $IFS in
+ printf '%s\n' 'move-dir-while-traversing.sh: skipped test: python inotify package not installed'
move-dir-while-traversing.sh: skipped test: python inotify package not installed
+ test 9 = 2
+ printf '%s\n' 'move-dir-while-traversing.sh: skipped test: python inotify package not installed'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-move-dir-while-traversing.sh.BbEm
+ exit 77
SKIP tests/du/move-dir-while-traversing.sh (exit status: 77)

SKIP: tests/du/threshold
========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-threshold.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-threshold.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
++ cd /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ du
+ require_built_ du
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env du --version
du (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, Paul Eggert,
and Jim Meyering.
+ mkdir -p a/b a/c
+ touch a/b/0
+ printf %1s x
+ printf %2s x
+ printf %3s x
++ stat '--format=%B * %b' a
++ xargs expr
+ Ba=0
++ stat '--format=%B * %b' a/b
++ xargs expr
+ Bb=0
++ stat '--format=%B * %b' a/c
++ xargs expr
+ Bc=0
++ stat '--format=%B * %b' a/b/0
++ xargs expr
+ B0=0
++ stat '--format=%B * %b' a/b/1
++ xargs expr
+ B1=4096
++ stat '--format=%B * %b' a/b/2
++ xargs expr
+ B2=4096
++ stat '--format=%B * %b' a/b/3
++ xargs expr
+ B3=4096
++ stat --format=%s a
+ Sa=24
++ stat --format=%s a/b
+ Sb=42
++ stat --format=%s a/c
+ Sc=6
++ stat --format=%s a/b/0
+ S0=0
++ stat --format=%s a/b/1
+ S1=1
++ stat --format=%s a/b/2
+ S2=2
++ stat --format=%s a/b/3
+ S3=3
++ expr 0 + 0 + 4096 + 4096 + 4096
+ Bb0123=12288
++ expr 42 + 0 + 1 + 2 + 3
+ Sb0123=48
++ expr 0 + 0 + 12288
+ Bab0123=12288
++ expr 24 + 6 + 48
+ Sab0123=78
+ test 0 -gt 4
+ skip_ 'block size of a directory is smaller than 4 bytes'
+ warn_ 'threshold.sh: skipped test: block size of a directory is smaller than 4 bytes'
+ case $IFS in
+ printf '%s\n' 'threshold.sh: skipped test: block size of a directory is smaller than 4 bytes'
threshold.sh: skipped test: block size of a directory is smaller than 4 bytes
+ test 9 = 2
+ printf '%s\n' 'threshold.sh: skipped test: block size of a directory is smaller than 4 bytes'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-threshold.sh.bfj6
+ exit 77
SKIP tests/du/threshold.sh (exit status: 77)

SKIP: tests/id/gnu-zero-uids
============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-gnu-zero-uids.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-gnu-zero-uids.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
++ cd /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ id
+ require_built_ id
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env id --version
id (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
+ require_gnu_
++ uname
+ test Linux = GNU
+ skip_ 'not running on GNU/Hurd'
+ warn_ 'gnu-zero-uids.sh: skipped test: not running on GNU/Hurd'
+ case $IFS in
+ printf '%s\n' 'gnu-zero-uids.sh: skipped test: not running on GNU/Hurd'
gnu-zero-uids.sh: skipped test: not running on GNU/Hurd
+ test 9 = 2
+ printf '%s\n' 'gnu-zero-uids.sh: skipped test: not running on GNU/Hurd'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-gnu-zero-uids.sh.9u35
+ exit 77
SKIP tests/id/gnu-zero-uids.sh (exit status: 77)

SKIP: tests/id/no-context
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-no-context.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-no-context.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
++ cd /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ id
+ require_built_ id
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env id --version
id (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'no-context.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'no-context.sh: skipped test: this system lacks SELinux support'
no-context.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ printf '%s\n' 'no-context.sh: skipped test: this system lacks SELinux support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-no-context.sh.Tvuy
+ exit 77
SKIP tests/id/no-context.sh (exit status: 77)

SKIP: tests/id/context
======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-context.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-context.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
++ cd /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ id
+ require_built_ id
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env id --version
id (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'context.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'context.sh: skipped test: this system lacks SELinux support'
context.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ printf '%s\n' 'context.sh: skipped test: this system lacks SELinux support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-context.sh.FaFb
+ exit 77
SKIP tests/id/context.sh (exit status: 77)

SKIP: tests/id/smack
====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-smack.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-smack.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
++ cd /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ id
+ require_built_ id
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env id --version
id (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
+ require_smack_
+ grep 'smackfs$' /proc/filesystems
+ skip_ 'this system lacks SMACK support'
+ warn_ 'smack.sh: skipped test: this system lacks SMACK support'
+ case $IFS in
+ printf '%s\n' 'smack.sh: skipped test: this system lacks SMACK support'
smack.sh: skipped test: this system lacks SMACK support
+ test 9 = 2
+ printf '%s\n' 'smack.sh: skipped test: this system lacks SMACK support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-smack.sh.2CAj
+ exit 77
SKIP tests/id/smack.sh (exit status: 77)

SKIP: tests/install/install-C-selinux
=====================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-install-C-selinux.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-install-C-selinux.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
++ cd /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ginstall
+ require_built_ ginstall
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ginstall --version
install (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'install-C-selinux.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'install-C-selinux.sh: skipped test: this system lacks SELinux support'
install-C-selinux.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ printf '%s\n' 'install-C-selinux.sh: skipped test: this system lacks SELinux support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-install-C-selinux.sh.oZ1v
+ exit 77
SKIP tests/install/install-C-selinux.sh (exit status: 77)

SKIP: tests/install/install-Z-selinux
=====================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-install-Z-selinux.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-install-Z-selinux.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
++ cd /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ginstall
+ require_built_ ginstall
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ginstall --version
install (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'install-Z-selinux.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'install-Z-selinux.sh: skipped test: this system lacks SELinux support'
install-Z-selinux.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ printf '%s\n' 'install-Z-selinux.sh: skipped test: this system lacks SELinux support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-install-Z-selinux.sh.Odtg
+ exit 77
SKIP tests/install/install-Z-selinux.sh (exit status: 77)

SKIP: tests/ls/no-cap
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-no-cap.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-no-cap.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
++ cd /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ls
+ require_built_ ls
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ls --version
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
+ require_strace_ capget
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'no-cap.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'no-cap.sh: skipped test: no strace program'
no-cap.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'no-cap.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-no-cap.sh.XwxH
+ exit 77
SKIP tests/ls/no-cap.sh (exit status: 77)

SKIP: tests/ls/stat-free-color
==============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-stat-free-color.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-stat-free-color.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
++ cd /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ls
+ require_built_ ls
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ls --version
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
+ require_strace_ stat
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'stat-free-color.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'stat-free-color.sh: skipped test: no strace program'
stat-free-color.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'stat-free-color.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-stat-free-color.sh.9sIT
+ exit 77
SKIP tests/ls/stat-free-color.sh (exit status: 77)

SKIP: tests/ls/stat-free-symlinks
=================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-stat-free-symlinks.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-stat-free-symlinks.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
++ cd /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ls
+ require_built_ ls
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ls --version
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
+ require_strace_ stat
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'stat-free-symlinks.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'stat-free-symlinks.sh: skipped test: no strace program'
stat-free-symlinks.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'stat-free-symlinks.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-stat-free-symlinks.sh.sTjW
+ exit 77
SKIP tests/ls/stat-free-symlinks.sh (exit status: 77)

SKIP: tests/mkdir/selinux
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-selinux.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-selinux.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
++ cd /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mkdir mkfifo mknod
+ require_built_ mkdir mkfifo mknod
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mkdir --version
mkdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mkfifo --version
mkfifo (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mknod --version
mknod (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_selinux_enforcing_
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'selinux.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'selinux.sh: skipped test: this system lacks SELinux support'
selinux.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ printf '%s\n' 'selinux.sh: skipped test: this system lacks SELinux support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.a2nU
+ exit 77
SKIP tests/mkdir/selinux.sh (exit status: 77)

SKIP: tests/mkdir/restorecon
============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-restorecon.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-restorecon.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
++ cd /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mkdir mknod mkfifo
+ require_built_ mkdir mknod mkfifo
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mkdir --version
mkdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mknod --version
mknod (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mkfifo --version
mkfifo (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_selinux_
+ grep 'selinuxfs$' /proc/filesystems
+ skip_ 'this system lacks SELinux support'
+ warn_ 'restorecon.sh: skipped test: this system lacks SELinux support'
+ case $IFS in
+ printf '%s\n' 'restorecon.sh: skipped test: this system lacks SELinux support'
restorecon.sh: skipped test: this system lacks SELinux support
+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'restorecon.sh: skipped test: this system lacks SELinux support'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-restorecon.sh.tmqs
+ exit 77
SKIP tests/mkdir/restorecon.sh (exit status: 77)

SKIP: tests/mkdir/smack-no-root
===============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-smack-no-root.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-smack-no-root.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
++ cd /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mkdir mkfifo mknod
+ require_built_ mkdir mkfifo mknod
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mkdir --version
mkdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mkfifo --version
mkfifo (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mknod --version
mknod (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_smack_
+ grep 'smackfs$' /proc/filesystems
+ skip_ 'this system lacks SMACK support'
+ warn_ 'smack-no-root.sh: skipped test: this system lacks SMACK support'
+ case $IFS in
+ printf '%s\n' 'smack-no-root.sh: skipped test: this system lacks SMACK support'
smack-no-root.sh: skipped test: this system lacks SMACK support
+ test 9 = 2
+ printf '%s\n' 'smack-no-root.sh: skipped test: this system lacks SMACK support'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-smack-no-root.sh.fUsr
+ exit 77
SKIP tests/mkdir/smack-no-root.sh (exit status: 77)

SKIP: tests/mv/acl
==================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-acl.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-acl.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
++ cd /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mv
+ require_built_ mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_acl_
+ getfacl --version
+ setfacl --version
+ id -u bin
+ grep '^#define USE_ACL 1' /home/user/FunctionTest/rust-coreutils/lib/config.h
+ skip_ 'insufficient ACL support'
+ warn_ 'acl.sh: skipped test: insufficient ACL support'
+ case $IFS in
+ printf '%s\n' 'acl.sh: skipped test: insufficient ACL support'
acl.sh: skipped test: insufficient ACL support
+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'acl.sh: skipped test: insufficient ACL support'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-acl.sh.aO7B
+ exit 77
SKIP tests/mv/acl.sh (exit status: 77)

SKIP: tests/mv/atomic
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-atomic.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-atomic.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
++ cd /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mv
+ require_built_ mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_strace_ unlink
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'atomic.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'atomic.sh: skipped test: no strace program'
atomic.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'atomic.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-atomic.sh.GJRN
+ exit 77
SKIP tests/mv/atomic.sh (exit status: 77)

SKIP: tests/mv/atomic2
======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-atomic2.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-atomic2.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
++ cd /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mv
+ require_built_ mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_strace_ unlink
+ test 1 = 1
+ strace -V
+ skip_ 'no strace program'
+ warn_ 'atomic2.sh: skipped test: no strace program'
+ case $IFS in
+ printf '%s\n' 'atomic2.sh: skipped test: no strace program'
atomic2.sh: skipped test: no strace program
+ test 9 = 2
+ printf '%s\n' 'atomic2.sh: skipped test: no strace program'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-atomic2.sh.Ep6b
+ exit 77
SKIP tests/mv/atomic2.sh (exit status: 77)

SKIP: tests/mv/i-3
==================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-i-3.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-i-3.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
++ cd /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mv
+ require_built_ mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_controlling_input_terminal_
+ have_input_tty=yes
+ tty -s
+ have_input_tty=no
+ test -t 0
+ have_input_tty=no
+ test no = no
+ skip_ 'requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ warn_ 'i-3.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ case $IFS in
+ printf '%s\n' 'i-3.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
i-3.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.
+ test 9 = 2
+ printf '%s\n' 'i-3.sh: skipped test: requires controlling input terminal
This test must have a controlling input "terminal", so it may not be
run via "batch", "at", or "ssh".  On some systems, it may not even be
run in the background.'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-i-3.sh.IpAu
+ exit 77
SKIP tests/mv/i-3.sh (exit status: 77)

SKIP: tests/touch/not-owner
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-not-owner.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-not-owner.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
++ cd /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ touch
+ require_built_ touch
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env touch --version
touch (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, Arnold Robbins, Jim Kingdon,
David MacKenzie, and Randy Smith.
+ env -- test -w /
+ env -- test -O /
+ env -- test -G /
+ skip_ 'you own /.'
+ warn_ 'not-owner.sh: skipped test: you own /.'
+ case $IFS in
+ printf '%s\n' 'not-owner.sh: skipped test: you own /.'
not-owner.sh: skipped test: you own /.
+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'not-owner.sh: skipped test: you own /.'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-not-owner.sh.qc6u
+ exit 77
SKIP tests/touch/not-owner.sh (exit status: 77)

SKIP: tests/chown/basic
=======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-basic.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-basic.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
++ cd /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chown
+ require_built_ chown
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chown --version
chown (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'basic.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'basic.sh: skipped test: must be run as root'
basic.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'basic.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-basic.sh.mG5Q
+ exit 77
SKIP tests/chown/basic.sh (exit status: 77)

SKIP: tests/cp/cp-a-selinux
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-cp-a-selinux.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-cp-a-selinux.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
++ cd /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'cp-a-selinux.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'cp-a-selinux.sh: skipped test: must be run as root'
cp-a-selinux.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'cp-a-selinux.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-cp-a-selinux.sh.B67C
+ exit 77
SKIP tests/cp/cp-a-selinux.sh (exit status: 77)

SKIP: tests/cp/preserve-gid
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-preserve-gid.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-preserve-gid.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
++ cd /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_perl_
+ : perl
+ perl -e 'use warnings'
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'preserve-gid.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'preserve-gid.sh: skipped test: must be run as root'
preserve-gid.sh: skipped test: must be run as root
+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'preserve-gid.sh: skipped test: must be run as root'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-preserve-gid.sh.L3du
+ exit 77
SKIP tests/cp/preserve-gid.sh (exit status: 77)

SKIP: tests/cp/special-bits
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-special-bits.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-special-bits.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
++ cd /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'special-bits.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'special-bits.sh: skipped test: must be run as root'
special-bits.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'special-bits.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-special-bits.sh.k3x5
+ exit 77
SKIP tests/cp/special-bits.sh (exit status: 77)

SKIP: tests/cp/cp-mv-enotsup-xattr
==================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-cp-mv-enotsup-xattr.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-cp-mv-enotsup-xattr.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
++ cd /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp mv
+ require_built_ cp mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'cp-mv-enotsup-xattr.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'cp-mv-enotsup-xattr.sh: skipped test: must be run as root'
cp-mv-enotsup-xattr.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'cp-mv-enotsup-xattr.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-cp-mv-enotsup-xattr.sh.qlrP
+ exit 77
SKIP tests/cp/cp-mv-enotsup-xattr.sh (exit status: 77)

SKIP: tests/cp/capability
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-capability.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-capability.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
++ cd /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'capability.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'capability.sh: skipped test: must be run as root'
capability.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'capability.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-capability.sh.ZXdm
+ exit 77
SKIP tests/cp/capability.sh (exit status: 77)

SKIP: tests/cp/cross-dev-symlink
================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-cross-dev-symlink.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-cross-dev-symlink.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
++ cd /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'cross-dev-symlink.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'cross-dev-symlink.sh: skipped test: must be run as root'
cross-dev-symlink.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'cross-dev-symlink.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-cross-dev-symlink.sh.mnCS
+ exit 77
SKIP tests/cp/cross-dev-symlink.sh (exit status: 77)

SKIP: tests/dd/skip-seek-past-dev
=================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-skip-seek-past-dev.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-skip-seek-past-dev.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
++ cd /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ dd
+ require_built_ dd
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env dd --version
dd (coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, and Stuart Kemp.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'skip-seek-past-dev.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'skip-seek-past-dev.sh: skipped test: must be run as root'
skip-seek-past-dev.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'skip-seek-past-dev.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-skip-seek-past-dev.sh.nm6t
+ exit 77
SKIP tests/dd/skip-seek-past-dev.sh (exit status: 77)

SKIP: tests/df/problematic-chars
================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-problematic-chars.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-problematic-chars.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
++ cd /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ df printf
+ require_built_ df printf
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env df --version
df (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Paul Eggert.
+ for i in $*
+ env printf --version
printf (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'problematic-chars.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'problematic-chars.sh: skipped test: must be run as root'
problematic-chars.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'problematic-chars.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-problematic-chars.sh.KF9G
+ exit 77
SKIP tests/df/problematic-chars.sh (exit status: 77)

SKIP: tests/df/over-mount-device
================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-over-mount-device.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-over-mount-device.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
++ cd /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ df
+ require_built_ df
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env df --version
df (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Paul Eggert.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'over-mount-device.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'over-mount-device.sh: skipped test: must be run as root'
over-mount-device.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'over-mount-device.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-over-mount-device.sh.6UNA
+ exit 77
SKIP tests/df/over-mount-device.sh (exit status: 77)

SKIP: tests/du/bind-mount-dir-cycle
===================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-bind-mount-dir-cycle.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-bind-mount-dir-cycle.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
++ cd /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ du
+ require_built_ du
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env du --version
du (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, Paul Eggert,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'bind-mount-dir-cycle.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'bind-mount-dir-cycle.sh: skipped test: must be run as root'
bind-mount-dir-cycle.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'bind-mount-dir-cycle.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle.sh.7mPz
+ exit 77
SKIP tests/du/bind-mount-dir-cycle.sh (exit status: 77)

SKIP: tests/du/bind-mount-dir-cycle-v2
======================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-bind-mount-dir-cycle-v2.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-bind-mount-dir-cycle-v2.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
++ cd /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ du
+ require_built_ du
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env du --version
du (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, Paul Eggert,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'bind-mount-dir-cycle-v2.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'bind-mount-dir-cycle-v2.sh: skipped test: must be run as root'
bind-mount-dir-cycle-v2.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'bind-mount-dir-cycle-v2.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-bind-mount-dir-cycle-v2.sh.zyQt
+ exit 77
SKIP tests/du/bind-mount-dir-cycle-v2.sh (exit status: 77)

SKIP: tests/id/setgid
=====================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-setgid.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-setgid.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
++ cd /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ id
+ require_built_ id
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env id --version
id (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Arnold Robbins and David MacKenzie.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'setgid.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'setgid.sh: skipped test: must be run as root'
setgid.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'setgid.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-setgid.sh.LygJ
+ exit 77
SKIP tests/id/setgid.sh (exit status: 77)

SKIP: tests/install/install-C-root
==================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-install-C-root.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-install-C-root.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
++ cd /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ginstall
+ require_built_ ginstall
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ginstall --version
install (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'install-C-root.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'install-C-root.sh: skipped test: must be run as root'
install-C-root.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'install-C-root.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-install-C-root.sh.XOTr
+ exit 77
SKIP tests/install/install-C-root.sh (exit status: 77)

SKIP: tests/ls/capability
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-capability.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-capability.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
++ cd /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ls printf
+ require_built_ ls printf
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ls --version
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
+ for i in $*
+ env printf --version
printf (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'capability.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'capability.sh: skipped test: must be run as root'
capability.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'capability.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-capability.sh.CxHx
+ exit 77
SKIP tests/ls/capability.sh (exit status: 77)

SKIP: tests/ls/nameless-uid
===========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-nameless-uid.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-nameless-uid.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
++ cd /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ ls
+ require_built_ ls
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env ls --version
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'nameless-uid.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'nameless-uid.sh: skipped test: must be run as root'
nameless-uid.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'nameless-uid.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-nameless-uid.sh.Zk1H
+ exit 77
SKIP tests/ls/nameless-uid.sh (exit status: 77)

SKIP: tests/misc/chcon
======================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-chcon.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-chcon.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
++ cd /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chcon
+ require_built_ chcon
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chcon --version
chcon (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Russell Coker and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'chcon.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'chcon.sh: skipped test: must be run as root'
chcon.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'chcon.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-chcon.sh.aMjN
+ exit 77
SKIP tests/misc/chcon.sh (exit status: 77)

SKIP: tests/misc/chroot-credentials
===================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-chroot-credentials.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-chroot-credentials.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
++ cd /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chroot
+ require_built_ chroot
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chroot --version
chroot (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Roland McGrath.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'chroot-credentials.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'chroot-credentials.sh: skipped test: must be run as root'
chroot-credentials.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'chroot-credentials.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-chroot-credentials.sh.wMtA
+ exit 77
SKIP tests/misc/chroot-credentials.sh (exit status: 77)

SKIP: tests/misc/selinux
========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-selinux.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-selinux.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
++ cd /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ chcon cp ls mv stat
+ require_built_ chcon cp ls mv stat
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env chcon --version
chcon (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Russell Coker and Jim Meyering.
+ for i in $*
+ env cp --version
cp (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ for i in $*
+ env ls --version
ls (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Richard M. Stallman and David MacKenzie.
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ for i in $*
+ env stat --version
stat (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Michael Meskes.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'selinux.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'selinux.sh: skipped test: must be run as root'
selinux.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'selinux.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-selinux.sh.Q5X6
+ exit 77
SKIP tests/misc/selinux.sh (exit status: 77)

SKIP: tests/misc/truncate-owned-by-other
========================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-truncate-owned-by-other.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-truncate-owned-by-other.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
++ cd /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ truncate
+ require_built_ truncate
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env truncate --version
truncate (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Padraig Brady.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'truncate-owned-by-other.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'truncate-owned-by-other.sh: skipped test: must be run as root'
truncate-owned-by-other.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'truncate-owned-by-other.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-truncate-owned-by-other.sh.fSSx
+ exit 77
SKIP tests/misc/truncate-owned-by-other.sh (exit status: 77)

SKIP: tests/mkdir/writable-under-readonly
=========================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-writable-under-readonly.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-writable-under-readonly.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
++ cd /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mkdir
+ require_built_ mkdir
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mkdir --version
mkdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'writable-under-readonly.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'writable-under-readonly.sh: skipped test: must be run as root'
writable-under-readonly.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'writable-under-readonly.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-writable-under-readonly.sh.i9wa
+ exit 77
SKIP tests/mkdir/writable-under-readonly.sh (exit status: 77)

SKIP: tests/mkdir/smack-root
============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-smack-root.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-smack-root.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
++ cd /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mkdir mkfifo mknod
+ require_built_ mkdir mkfifo mknod
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mkdir --version
mkdir (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mkfifo --version
mkfifo (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ for i in $*
+ env mknod --version
mknod (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David MacKenzie.
+ require_smack_
+ grep 'smackfs$' /proc/filesystems
+ skip_ 'this system lacks SMACK support'
+ warn_ 'smack-root.sh: skipped test: this system lacks SMACK support'
+ case $IFS in
+ printf '%s\n' 'smack-root.sh: skipped test: this system lacks SMACK support'
smack-root.sh: skipped test: this system lacks SMACK support
+ test 9 = 2
+ sed 1q
+ printf '%s\n' 'smack-root.sh: skipped test: this system lacks SMACK support'
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-smack-root.sh.r8HY
+ exit 77
SKIP tests/mkdir/smack-root.sh (exit status: 77)

SKIP: tests/mv/hardlink-case
============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-hardlink-case.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-hardlink-case.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
++ cd /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mv
+ require_built_ mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'hardlink-case.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'hardlink-case.sh: skipped test: must be run as root'
hardlink-case.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'hardlink-case.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-hardlink-case.sh.hEPw
+ exit 77
SKIP tests/mv/hardlink-case.sh (exit status: 77)

SKIP: tests/mv/sticky-to-xpart
==============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-sticky-to-xpart.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-sticky-to-xpart.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
++ cd /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ mv
+ require_built_ mv
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env mv --version
mv (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Mike Parker, David MacKenzie, and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'sticky-to-xpart.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'sticky-to-xpart.sh: skipped test: must be run as root'
sticky-to-xpart.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'sticky-to-xpart.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-sticky-to-xpart.sh.mPVr
+ exit 77
SKIP tests/mv/sticky-to-xpart.sh (exit status: 77)

SKIP: tests/rm/fail-2eperm
==========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-fail-2eperm.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-fail-2eperm.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
++ cd /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'fail-2eperm.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'fail-2eperm.sh: skipped test: must be run as root'
fail-2eperm.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'fail-2eperm.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-fail-2eperm.sh.1Yk4
+ exit 77
SKIP tests/rm/fail-2eperm.sh (exit status: 77)

SKIP: tests/rm/no-give-up
=========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-no-give-up.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-no-give-up.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
++ cd /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'no-give-up.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'no-give-up.sh: skipped test: must be run as root'
no-give-up.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'no-give-up.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-no-give-up.sh.t95c
+ exit 77
SKIP tests/rm/no-give-up.sh (exit status: 77)

SKIP: tests/rm/one-file-system
==============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-one-file-system.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-one-file-system.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
++ cd /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'one-file-system.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'one-file-system.sh: skipped test: must be run as root'
one-file-system.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'one-file-system.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-one-file-system.sh.0aas
+ exit 77
SKIP tests/rm/one-file-system.sh (exit status: 77)

SKIP: tests/rm/read-only
========================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-read-only.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-read-only.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
++ cd /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'read-only.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'read-only.sh: skipped test: must be run as root'
read-only.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'read-only.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-read-only.sh.ctz1
+ exit 77
SKIP tests/rm/read-only.sh (exit status: 77)

SKIP: tests/rm/empty-immutable-skip
===================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-empty-immutable-skip.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-empty-immutable-skip.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
++ cd /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ rm
+ require_built_ rm
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env rm --version
rm (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Richard M. Stallman,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'empty-immutable-skip.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'empty-immutable-skip.sh: skipped test: must be run as root'
empty-immutable-skip.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'empty-immutable-skip.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-empty-immutable-skip.sh.PmYK
+ exit 77
SKIP tests/rm/empty-immutable-skip.sh (exit status: 77)

SKIP: tests/tail-2/append-only
==============================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-append-only.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-append-only.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
++ cd /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'append-only.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'append-only.sh: skipped test: must be run as root'
append-only.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'append-only.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-append-only.sh.3Y11
+ exit 77
SKIP tests/tail-2/append-only.sh (exit status: 77)

SKIP: tests/tail-2/end-of-device
================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-end-of-device.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-end-of-device.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
++ cd /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'end-of-device.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'end-of-device.sh: skipped test: must be run as root'
end-of-device.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'end-of-device.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-end-of-device.sh.cnVr
+ exit 77
SKIP tests/tail-2/end-of-device.sh (exit status: 77)

SKIP: tests/touch/now-owned-by-other
====================================

++ initial_cwd_=/home/user/FunctionTest/rust-coreutils
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /home/user/FunctionTest/rust-coreutils gt-now-owned-by-other.sh.XXXX
+++ case $# in
+++ destdir_=/home/user/FunctionTest/rust-coreutils
+++ template_=gt-now-owned-by-other.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/home/user/FunctionTest/rust-coreutils/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
+++ case $d in
+++ :
+++ test -d /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
++++ ls -dgo /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
+++ perms='drwx------ 2 6 Sep  5 10:10 /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI'
+++ case $perms in
+++ :
+++ echo /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
+++ return
++ test_dir_=/home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
++ cd /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
++ case $srcdir in
++ srcdir=../.
++ builddir=..
++ export srcdir builddir
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/home/user/FunctionTest/rust-coreutils/./src
+ case $abs_path_dir_ in
+ PATH=/home/user/FunctionTest/rust-coreutils/./src:/home/user/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+ create_exe_shims_ /home/user/FunctionTest/rust-coreutils/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ touch
+ require_built_ touch
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env touch --version
touch (GNU coreutils) 9.0
Copyright (C) 2021 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, Arnold Robbins, Jim Kingdon,
David MacKenzie, and Randy Smith.
+ require_root_
+ uid_is_privileged_
++ id -u
+ my_uid=999
+ case $my_uid in
+ return 1
+ skip_ 'must be run as root'
+ warn_ 'now-owned-by-other.sh: skipped test: must be run as root'
+ case $IFS in
+ printf '%s\n' 'now-owned-by-other.sh: skipped test: must be run as root'
now-owned-by-other.sh: skipped test: must be run as root
+ test 9 = 2
+ printf '%s\n' 'now-owned-by-other.sh: skipped test: must be run as root'
+ sed 1q
+ Exit 77
+ set +e
+ exit 77
+ exit 77
+ remove_tmp_
+ __st=77
+ cleanup_
+ :
+ test '' = yes
+ cd /home/user/FunctionTest/rust-coreutils
+ chmod -R u+rwx /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
+ rm -rf /home/user/FunctionTest/rust-coreutils/gt-now-owned-by-other.sh.f1EI
+ exit 77
SKIP tests/touch/now-owned-by-other.sh (exit status: 77)

